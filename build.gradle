import java.text.SimpleDateFormat

plugins {
    id "java"
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
    id "edu.wpi.first.GradleRIO" version "2019.0.0-beta0-pre3"
}

ext.kotlinVersion = "1.3.10"
ext.sertainVersion = "1.2.1"
ext.ktlintVersion = "0.19.0"
ext.gsonVersion = "2.8.5"
ext.meanlibVersion = "63abd21a1b574154c2f05cae7bb7b98404638f08"

check.dependsOn "ktlint"
compileKotlin.dependsOn "versionTxt"
tasks.whenTaskAdded { task ->
    if (task.name == "deploy" || task.name == "deployMain") task.dependsOn "assemble"
}

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://www.kauailabs.com/maven2" }
    maven { url "https://raw.githubusercontent.com/Open-RIO/Maven-Mirror/master/m2/" }
    maven { url "http://devsite.ctr-electronics.com/maven/release" }
    maven { url "http://first.wpi.edu/FRC/roborio/maven/development/" }
}

configurations {
    ktlint
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    compile "com.github.SouthEugeneRoboticsTeam:meanlib:$meanlibVersion"
    compile "org.sert2521.sertain:core:$sertainVersion"
    compile "com.google.code.gson:gson:$gsonVersion"

    compile "com.ctre.frcbeta.phoenix:wpiapi-java:5.9.2"
    compile "com.kauailabs.navx.frc:navx-java:3.1.336"

    compile wpilib()
    compile javaVendorLibraries()
    nativeZip jniRoboRIOVendorLibraries()
    nativeDesktopZip jniDesktopVendorLibraries()

    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:2.7.22"

    ktlint "com.github.shyiko:ktlint:$ktlintVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

deploy {
    targets {
        roboRIO("roborio") {
            team = getTeamOrDefault(2521)
        }
    }
    artifacts {
        frcJavaArtifact("main") {
            targets << "roborio"
            debug = getDebugOrDefault(false)
        }
        // Built in artifact to deploy arbitrary files to the roboRIO.
        fileTreeArtifact("frcStaticFileDeploy") {
            // The directory below is the local directory to deploy
            files = fileTree(dir: "src/main/deploy")
            // Deploy to RoboRIO target, into /home/lvuser/deploy
            targets << "roborio"
            directory = "/home/lvuser/deploy"
        }
    }
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest("org.sert2521.bunnybots.MainKt")
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "rev-parse", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "rev-parse", "--abbrev-ref", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitFilesChanged = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "diff", "--name-only", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim().replace("\n", ", ")
}

task versionTxt()  {
    doLast {
        String resourcesDir = "$projectDir/src/main/resources"
        new File("$resourcesDir/branch.txt").text = getGitBranch()
        new File("$resourcesDir/commit.txt").text = getGitHash()
        new File("$resourcesDir/changes.txt").text = getGitFilesChanged()
        new File("$resourcesDir/buildtime.txt").text =
                new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date())
    }
}

wrapper {
    gradleVersion = "4.10"
}
